import dex.plugins.outlet.v2.util.ReleaseType

plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'io.github.dexman545.outlet' version '1.6.1'
	id 'com.modrinth.minotaur' version '2.+'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

outlet {
	maintainPropertiesFile = System.getenv("DISABLE_PROPERTIES_UPDATE") == null
	mcVersionRange = project.supported_minecraft_versions
	allowedReleaseTypes = [ReleaseType.RELEASE]
	propertiesData = [
			'fapi_version': outlet.fapiVersion(project.minecraft_version),
	        'yarn_mappings': outlet.yarnVersion(project.minecraft_version),
			'loader_version': outlet.loaderVersion(),
	]
}

loom {
    splitEnvironmentSourceSets()

	mods {
		"frost" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}

configurations {
	includeImplementation
	include.extendsFrom includeImplementation
	implementation.extendsFrom includeImplementation
}

repositories {
	maven {
		name = "OffsetMods538"
		url = "https://maven.offsetmonkey538.top/releases"
		content {
			includeGroup "top.offsetmonkey538.offsetconfig538"
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fapi_version}"

	// OffsetConfig538
	includeImplementation "top.offsetmonkey538.offsetconfig538:offsetconfig538:${project.offsetconfig538_version}"
}

processResources {
	final Map properties = Map<String, String>.of(
			"modVersion", project.mod_version,
			"supportedMinecraftVersions", project.supported_minecraft_versions
	)

	inputs.properties(properties)

	filesMatching("fabric.mod.json") {
		expand(properties)
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN")
	projectId = "better-frost-walker"

	def customVersionName = System.getenv("VERSION_NAME")
	if (customVersionName != null) versionName = customVersionName

	versionNumber = "${project.version}"

	def isPreRelease = System.getenv("VERSION_IS_PRERELEASE")
	versionType = "false" == isPreRelease ? "release" : "beta"

	uploadFile = remapJar.archiveFile
	additionalFiles = [sourcesJar.archiveFile]

	gameVersions = outlet.mcVersions()

	syncBodyFrom = rootProject.file("README.md").text

	def changelogEnv = System.getenv("VERSION_CHANGELOG")
	if (changelogEnv != null) changelog = changelogEnv

	dependencies {
		required.project "fabric-api"
	}
}

tasks.modrinth.dependsOn(tasks.modrinthSyncBody)
